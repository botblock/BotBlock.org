if errors && errors.length > 0
    .notification.is-danger
        button.delete
        ul
            for error in errors
                li #{error}
form(method='POST')
    .field
        label.label(for='id') ID *
        .control
            input.input(type='text', id='id', name='id' value=data.id, required)
    .field
        label.label(for='name') Name *
        .control
            input.input(type='text', id='name', name='name' value=data.name, required)
    .field
        label.label(for='url') URL *
        .control
            input.input(type='text', id='url', name='url' value=data.url, required)
    .field
        label.label(for='icon') Icon *
        .control
            input.input(type='text', id='icon', name='icon' value=data.icon, required)
    .field
        label.label(for='language') Language *
        .control
            input.input(type='text', id='language', name='language' value=data.language, required)
    .field
        label.label(for='description') Short Description (Tagline)
        .control
            input.input(type='text', id='description', name='description' value=data.description)
    .field
        label.label(for='display') Display *
            small
                i  (Please add a message in notification content explaining why the list is hidden)
        .control
            .select
                select#display(name='display', required)
                    option(value='1', selected=data.display) Yes
                    option(value='0', selected=!data.display) No
    .field
        label.label(for='defunct') Defunct (Overrides Display)*
        .control
            .select
                select#defunct(name='defunct', required)
                    option(value='1', selected=data.defunct) Yes
                    option(value='0', selected=!data.defunct) No
    .field
        label.label(for='discord_only') Discord Exclusive *
        .control
            .select
                select#discord_only(name='discord_only', required)
                    option(value='1', selected=data.discord_only) Yes
                    option(value='0', selected=!data.discord_only) No
    .field
        label.label(for='content') Notification Content
        .control
            textarea.textarea#content(name='content') #{data.content}
    .field
        label.label(for='owners') Owners
            small
                i  (Please follow the format
                    code User 1#1234 (0123456789), User 2#4321 (9876543210)
                |  )
        .control
            input.input#owners(type='text', name='owners', value=data.owners)
    .field
        label.label(for='discord') Discord Invite
        .control
            input.input#discord(type='text', name='discord', value=data.discord)
    hr
    .field
        label.label(for='api_docs') API Docs URL
        .control
            input.input#api_docs(type='text', name='api_docs', value=data.api_docs)
    p
        i Use
            code :id
            | to represent the bot id.
    .columns
        .column
            .field
                label.label(for='api_post') API Post - URL
                .control
                    input.input#api_post(type='text', name='api_post', value=data.api_post)
            .field
                label.label(for='api_field') API Post - Server Count Field Name
                .control
                    input.input#api_field(type='text', name='api_field', value=data.api_field)
            .field
                label.label(for='api_shard_id') API Post - Shard ID Field Name
                .control
                    input.input#api_shard_id(type='text', name='api_shard_id', value=data.api_shard_id)
            .field
                label.label(for='api_shard_count') API Post - Shard Count Field Name
                .control
                    input.input#api_shard_count(type='text', name='api_shard_count', value=data.api_shard_count)
            .field
                label.label(for='api_shards') API Post - Shards Array Field Name
                .control
                    input.input#api_shards(type='text', name='api_shards', value=data.api_shards)
            .field
                label.label(for='add_bot') API Post - Add Bot URL
                .control
                    input.input#add_bot(type='text', name='add_bot', value=data.add_bot)
            .field
                label.label(for='add_bot_key') API Post - Add Bot Key
                .control
                    input.input#add_bot_key(type='text', name='add_bot_key', value=data.add_bot_key)

        .column
            .field
                label.label(for='api_get') API Bot Get - URL
                    small
                        i  (API endpoint to get info for specific bot)
                .control
                    input.input#api_get(type='text', name='api_get', value=data.api_get)
            .field
                label.label(for='api_all') API Get All - URL
                    small
                        i  (API endpoint to get info about all bots on lis)
                .control
                    input.input#api_all(type='text', name='api_all', value=data.api_all)
            .field
                label.label(for='view_bot') View Bot URL
                .control
                    input.input#view_bot(type='text', name='view_bot', value=data.view_bot)
            .field
                label.label(for='bot_widget') Bot Widget URL
                .control
                    input.input#bot_widget(type='text', name='bot_widget', value=data.bot_widget)
    hr
    include ../checkboxes
    .control(style='margin-top: 10px')
        button.button.is-brand Submit
        